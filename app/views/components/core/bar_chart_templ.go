// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package core

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type BarChartProps struct {
	Id string
}

func BarChartScript(props *BarChartProps) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_BarChartScript_9b10`,
		Function: `function __templ_BarChartScript_9b10(props){const chartConfig = {
  series: [
    {
      name: "Transactional",
      data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],
    },
    {
      name: "Promotional",
      data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],
    },
  ],
  chart: {
    type: "bar",
    height: 240,
    toolbar: {
      show: false,
    },
  },
  title: {
    show: "",
  },
  dataLabels: {
    enabled: false,
  },
  colors: ["#14B3DA", "#FFC107"],
  plotOptions: {
    bar: {
      columnWidth: "40%",
      borderRadius: 2,
      horizontal: true,
    },
  },
  xaxis: {
    axisTicks: {
      show: false,
    },
    axisBorder: {
      show: false,
    },
    labels: {
      style: {
        colors: "#616161",
        fontSize: "12px",
        fontFamily: "inherit",
        fontWeight: 400,
      },
    },
    categories: [
      "0161231241",
      "0161231242",
      "0161231243",
      "0161231244",
      "0161231245",
      "0161231246",
      "0161231247",
      "0161231248",
      "0161231249",
    ],
  },
  yaxis: {
    labels: {
      style: {
        colors: "#616161",
        fontSize: "12px",
        fontFamily: "inherit",
        fontWeight: 400,
      },
    },
  },
  grid: {
    show: true,
    borderColor: "#dddddd",
    strokeDashArray: 5,
    xaxis: {
      lines: {
        show: true,
      },
    },
    padding: {
      top: 5,
      right: 20,
    },
  },
  fill: {
    opacity: 0.8,
  },
  tooltip: {
    theme: "dark",
  },
};

const chart = new ApexCharts(document.querySelector("#bar-chart"), chartConfig);

chart.render();
}`,
		Call:       templ.SafeScript(`__templ_BarChartScript_9b10`, props),
		CallInline: templ.SafeScriptInline(`__templ_BarChartScript_9b10`, props),
	}
}

func BarChart(props *BarChartProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"relative flex flex-col rounded-xl bg-white bg-clip-border text-gray-700 shadow-md\"><div class=\"pt-6 px-2 pb-0\"><div id=\"bar-chart\"></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = BarChartScript(props).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
