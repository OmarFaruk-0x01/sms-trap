package core

type LineChartProps struct {
	Id string
}

script LineChartScript(props *LineChartProps) {
const chartConfig = {
  series: [
    {
      name: "Transactional",
      data: Array(30).fill(0).map((_, i) => Math.round(Math.random() * 1000)),
    },
    {
      name: "Promotional",
      data: Array(30).fill(0).map((_, i) => Math.round(Math.random() * 1000)),
    },
  ],
  chart: {
    type: "line",
    height: 240,
    toolbar: {
      show: false,
    },
  },
  title: {
    show: "",
  },
  dataLabels: {
    enabled: false,
  },
  colors: ["#14B3DA", "#FFC107"],
  stroke: {
    lineCap: "round",
    curve: "smooth",
  },
  markers: {
    size: 0,
  },
  xaxis: {
    axisTicks: {
      show: false,
    },
    axisBorder: {
      show: false,
    },
    labels: {
      style: {
        colors: "#616161",
        fontSize: "12px",
        fontFamily: "inherit",
        fontWeight: 400,
      },
    },
    categories: Array(30).fill(0).map((_, i) => i + 1),
  },
  yaxis: {
    labels: {
      style: {
        colors: "#616161",
        fontSize: "12px",
        fontFamily: "inherit",
        fontWeight: 400,
      },
    },
  },
  grid: {
    show: true,
    borderColor: "#dddddd",
    strokeDashArray: 5,
    xaxis: {
      lines: {
        show: true,
      },
    },
    padding: {
      top: 5,
      right: 20,
    },
  },
  fill: {
    opacity: 0.8,
  },
  tooltip: {
    theme: "dark",
  },
};


console.log(props)
    if (document.getElementById(props.Id) && typeof ApexCharts !== 'undefined') {
        const chart = new ApexCharts(document.getElementById(props.Id), chartConfig);
        chart.render();
    }

}

templ LineChart(props *LineChartProps) {
	<div class="relative flex flex-col rounded-xl bg-white bg-clip-border text-gray-700 z-0">
		<div class="px-2 pb-0">
			<div id={ props.Id }></div>
		</div>
	</div>
	@LineChartScript(props)
}
