// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package core

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type SelectItem struct {
	Title    string `json:"title"`
	Value    string `json:"value"`
	Disabled bool   `json:"disabled"`
}

type SelectProps struct {
	Id    string
	Items []*SelectItem
	Value string
}

func SelectScript(props *SelectProps) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_SelectScript_000e`,
		Function: `function __templ_SelectScript_000e(props){document.addEventListener("alpine:init", (e) => {
        Alpine.data("select", () => ({
        selectOpen: false,
        selectedItem: '',
        selectableItems: props.Items,
        selectableItemActive: null,
        selectId: props.Id,
        selectKeydownValue: '',
        selectKeydownTimeout: 1000,
        selectKeydownClearTimeout: null,
        selectDropdownPosition: 'bottom',
        init(){
				if (props.Value) {
					this.selectableItemActive = this.selectableItems?.find(item => item.value==props.Value);
					this.selectedItem = this.selectableItemActive
				}

				this.$watch('selectedItem', () => {
					this.$dispatch(` + "`" + `${this.selectId}-change` + "`" + `, this.selectedItem);
				})

            this.$watch('selectOpen', () => {
					if(!this.selectedItem){
						this.selectableItemActive = this.selectableItems[0];
					} else {
						this.selectableItemActive = this.selectableItems?.find(item => item.value==props.Value);
					}
					setTimeout(() => {
						this.selectScrollToActiveItem();
					}, 100);
					this.selectPositionUpdate();
					window.addEventListener('resize', (event) => { this.selectPositionUpdate(); });
        		});
        },
        selectableItemIsActive(item) {
            return this.selectableItemActive && this.selectableItemActive.value==item.value;
        },
        selectableItemActiveNext(){
            let index = this.selectableItems.indexOf(this.selectableItemActive);
            if(index < this.selectableItems.length-1){
                this.selectableItemActive = this.selectableItems[index+1];
                this.selectScrollToActiveItem();
            }
        },
        selectableItemActivePrevious(){
            let index = this.selectableItems.indexOf(this.selectableItemActive);
            if(index > 0){
                this.selectableItemActive = this.selectableItems[index-1];
                this.selectScrollToActiveItem();
            }
        },
        selectScrollToActiveItem(){
            if(this.selectableItemActive){
                activeElement = document.getElementById(this.selectableItemActive.value + '-' + this.selectId)
                newScrollPos = (activeElement.offsetTop + activeElement.offsetHeight) - this.$refs.selectableItemsList.offsetHeight;
                if(newScrollPos > 0){
                    this.$refs.selectableItemsList.scrollTop=newScrollPos;
                } else {
                    this.$refs.selectableItemsList.scrollTop=0;
                }
            }
        },
        selectKeydown(event){
            if (event.keyCode >= 65 && event.keyCode <= 90) {

                this.selectKeydownValue += event.key;
                selectedItemBestMatch = this.selectItemsFindBestMatch();
                if(selectedItemBestMatch){
                    if(this.selectOpen){
                        this.selectableItemActive = selectedItemBestMatch;
                        this.selectScrollToActiveItem();
                    } else {
                        this.selectedItem = this.selectableItemActive = selectedItemBestMatch;
                    }
                }

                if(this.selectKeydownValue != ''){
                    clearTimeout(this.selectKeydownClearTimeout);
                    this.selectKeydownClearTimeout = setTimeout(() => {
                        this.selectKeydownValue = '';
                    }, this.selectKeydownTimeout);
                }
            }
        },
        selectItemsFindBestMatch(){
            typedValue = this.selectKeydownValue.toLowerCase();
            var bestMatch = null;
            var bestMatchIndex = -1;
            for (var i = 0; i < this.selectableItems.length; i++) {
                var title = this.selectableItems[i].title.toLowerCase();
                var index = title.indexOf(typedValue);
                if (index > -1 && (bestMatchIndex == -1 || index < bestMatchIndex) && !this.selectableItems[i].disabled) {
                    bestMatch = this.selectableItems[i];
                    bestMatchIndex = index;
                }
            }
            return bestMatch;
        },
        selectPositionUpdate(){
            selectDropdownBottomPos = this.$refs.selectButton.getBoundingClientRect().top + this.$refs.selectButton.offsetHeight + parseInt(window.getComputedStyle(this.$refs.selectableItemsList).maxHeight);
            if(window.innerHeight < selectDropdownBottomPos){
                this.selectDropdownPosition = 'top';
            } else {
                this.selectDropdownPosition = 'bottom';
            }
        }
    }))
    })
}`,
		Call:       templ.SafeScript(`__templ_SelectScript_000e`, props),
		CallInline: templ.SafeScriptInline(`__templ_SelectScript_000e`, props),
	}
}

func Select(props *SelectProps) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = SelectScript(props).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div x-data=\"select()\" @keydown.escape=\"if(selectOpen){ selectOpen=false; }\" @keydown.down=\"if(selectOpen){ selectableItemActiveNext(); } else { selectOpen=true; } event.preventDefault();\" @keydown.up=\"if(selectOpen){ selectableItemActivePrevious(); } else { selectOpen=true; } event.preventDefault();\" @keydown.enter=\"selectedItem=selectableItemActive; selectOpen=false;\" @keydown=\"selectKeydown($event);\" class=\"relative min-w-[200px]\"><button x-ref=\"selectButton\" @click=\"selectOpen=!selectOpen\" :class=\"{ &#39;focus:ring-2 focus:ring-offset-2 focus:ring-neutral-400&#39; : !selectOpen }\" class=\"relative min-h-[38px] flex items-center justify-between w-full py-2 pl-3 pr-10 text-left bg-white border rounded-md shadow-sm cursor-default border-neutral-200/70 focus:outline-none  text-sm\"><span x-text=\"selectedItem ? selectedItem.title : &#39;Select Item&#39;\" class=\"truncate\">Select Item</span> <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" class=\"w-5 h-5 text-gray-400\"><path fill-rule=\"evenodd\" d=\"M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z\" clip-rule=\"evenodd\"></path></svg></span></button><ul x-show=\"selectOpen\" x-ref=\"selectableItemsList\" @click.away=\"selectOpen = false\" x-transition:enter=\"transition ease-out duration-50\" x-transition:enter-start=\"opacity-0 -translate-y-1\" x-transition:enter-end=\"opacity-100\" :class=\"{ &#39;bottom-0 mb-10&#39; : selectDropdownPosition == &#39;top&#39;, &#39;top-0 mt-10&#39; : selectDropdownPosition == &#39;bottom&#39; }\" class=\"absolute w-full py-1 mt-1 overflow-auto text-sm bg-white rounded-md shadow-md max-h-56 ring-1 ring-black ring-opacity-5 focus:outline-none\" x-cloak><template x-for=\"item in selectableItems\" :key=\"item.value\"><li @click=\"selectedItem=item; selectOpen=false; $refs.selectButton.focus();\" :id=\"item.value + &#39;-&#39; + selectId\" :data-disabled=\"item.disabled\" :class=\"{ &#39;bg-neutral-100 text-gray-900&#39; : selectableItemIsActive(item), &#39;&#39; : !selectableItemIsActive(item) }\" @mousemove=\"selectableItemActive=item\" class=\"relative flex items-center h-full py-2 pl-8 text-gray-700 cursor-default select-none data-[disabled]:opacity-50 data-[disabled]:pointer-events-none\"><svg x-show=\"selectedItem.value==item.value\" class=\"absolute left-0 w-4 h-4 ml-2 stroke-current text-neutral-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"20 6 9 17 4 12\"></polyline></svg> <span class=\"block font-medium truncate\" x-text=\"item.title\"></span></li></template></ul></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
