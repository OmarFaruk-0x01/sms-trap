package components

import "OmarFaruk-0x01/sms-trap/app/models"

import "OmarFaruk-0x01/sms-trap/app/views/icons"
import "fmt"
import "OmarFaruk-0x01/sms-trap/app/views/components/core"
import "strings"

script Clipboard(text string) {
	navigator.clipboard.writeText(text)
	toast('Copied to clipboard')
}

script OnSelectSms(trap *models.Trap) {
	Alpine.store('smsDetails').selectSms(trap)
}

templ SmsList(traps []*models.Trap) {
	for _, trap := range traps {
		<div class="flex items-start gap-2.5 max-w-[400px]">
			<div
				class="flex flex-col max-w-full leading-1.5 p-4 border bg-white rounded-e-xl rounded-es-xl hover:border-primary-400 duration-200 transition-all "
				:class="$store.smsDetails.sms?.id == $el.dataset.id ? 'border-primary-500' : ''"
				data-id={ fmt.Sprint(trap.Id) }
			>
				<div class="flex justify-between items-center gap-5">
					<div class="flex items-center space-x-2 rtl:space-x-reverse">
						<span class="text-sm font-semibold text-gray-900">{ trap.Phone }</span>
						<span class="text-sm font-normal text-gray-500 ">{ trap.CreatedAt.Format("02 Jan 2006 15:04") }</span>
					</div>
					<div class="flex items-center space-x-2 rtl:space-x-reverse">
						@core.Tooltip("View Details") {
							<button
								class="active:scale-95 transition hover:text-primary-500"
								:class="$store.smsDetails.sms?.id == $el.dataset.id ? 'text-primary-500' : ''"
								data-id={ fmt.Sprint(trap.Id) }
								onclick={ OnSelectSms(trap) }
							>
								@icons.Eye()
							</button>
						}
						@core.Tooltip("Copy to clipboard") {
							<button class="active:scale-95 transition hover:text-primary-500" onclick={ Clipboard(trap.Message) }>
								@icons.Clipboard()
							</button>
						}
					</div>
				</div>
				<p class="text-md font-normal py-2.5 text-gray-900 break-words">{ trap.Message }</p>
				<div class="flex items-center space-x-2 rtl:space-x-reverse">
					@core.Badge(&core.BadgeProps{
						Text:  trap.Type,
						Color: models.TrapTypeColor[strings.ToLower(trap.Type)],
					})
					@core.Badge(&core.BadgeProps{
						Text:  trap.Label,
						Color: models.TrapLabelColor[strings.ToLower(trap.Label)],
					})
				</div>
			</div>
		</div>
	}
}
