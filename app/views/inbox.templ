package views

import (
	"OmarFaruk-0x01/sms-trap/app/views/layouts"
	"OmarFaruk-0x01/sms-trap/app/models"
	"OmarFaruk-0x01/sms-trap/app/views/icons"
	"OmarFaruk-0x01/sms-trap/app/views/components/core"
	"OmarFaruk-0x01/sms-trap/app/views/components"
)

type InboxProps struct {
	*layouts.AppLayoutProps
	Phones           []*models.TrapPhones
	SelectedTraps    []*models.Trap
	ActivePhone      string
	ActiveTab        string
	ActiveTimeFilter string
}

templ Inbox(props *InboxProps) {
	@layouts.InboxLayout(&layouts.InboxLayoutProps{
		ActivePhone: props.ActivePhone,
		Phones:      props.Phones,
		AppLayoutProps: &layouts.AppLayoutProps{
			ActiveRoute: props.ActiveRoute,
		},
	}) {
		if props.ActivePhone == "" {
			@components.BlankView("Please select a phone number to see details")
		} else {
			// Details view of selected phone
			<section class="relative w-full h-full overflow-y-scroll">
				<div class="sticky top-0 bg-white flex flex-col justify-between items-start z-50">
					<div class="p-4 flex  items-center">
						<div class="flex items-center gap-2">
							<div class="w-5 h-5 stroke-primary-500">
								@icons.Phone()
							</div>
							<h3 class="font-semibold text-lg">{ props.ActivePhone }</h3>
						</div>
					</div>
					<hr class="w-full"/>
				</div>
				@core.Tabs(&core.TabsProps{
					ActiveTab: props.ActiveTab,
					TabItems: []*core.TabItemProps{
						&core.TabItemProps{
							Id:        "sms-list",
							ActiveTab: props.ActiveTab,
							Icon:      icons.Message,
							Label:     "SMS",
							Panel: func() templ.Component {
								return components.SmsPanel(&components.SmsPanelProps{
									ActivePhone:   props.ActivePhone,
									SelectedTraps: props.SelectedTraps,
								})
							},
						},
						// TODO: Add more tabs for
						// Getting Stats
						// Checking Rules
						// Calculating Costs
					},
				}) {
					// <div class="">
					// 	if (props.ActiveTab == "sms-list") {
					// 	}
					// 	if (props.ActiveTab == "stats") {
					// 		@components.StatsPanel(&components.StatsPanelProps{
					// 			ActiveTimeFilter: props.ActiveTimeFilter,
					// 		})
					// 	}
					// 	if (props.ActiveTab == "costs") {
					// 		@components.CostsPanel()
					// 	}
					// 	if (props.ActiveTab == "concern") {
					// 		@components.ConcernPanel()
					// 	}
					// </div>
				}
			</section>
		}
	}
}
