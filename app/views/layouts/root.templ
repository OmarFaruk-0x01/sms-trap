package layouts

import "OmarFaruk-0x01/sms-trap/app/views/components/core"

script ReadyNotification() {
    if (!("Notification" in window)) {
        // Check if the browser supports notifications
        alert("This browser does not support desktop notification");
    } else if (Notification.permission !== "denied") {
        Notification.requestPermission().then((permission) => {
            if (permission === "granted") {
                console.log("Notification permission granted");
            }else{
                alert('Without notification permission SMS Trap can\'t able to send browser notification.')
            }
        });
    }
}

script RegisterAlpineStore() {
    document.addEventListener('alpine:init', () => {
        Alpine.store('navbar', {
            on: true,
            toggle() {
                this.on = !this.on
            }
        })

        Alpine.store('phoneList', {
            phones: [],
            init(){

            }
        })

        Alpine.store('smsDetails', {
            sms: null,
            open: false,
            selectSms(sms) {
                this.sms = sms
                this.open = true
            },
            close(){
                this.open = false
                setTimeout(() => {
                    this.sms = null
                },300)
            }
        })
    })
}

script ReadyWebSocket() {

    var loc = window.location;
    var uri = 'ws:';

    if (loc.protocol === 'https:') {
      uri = 'wss:';
    }
    uri += '//' + loc.host;
    uri +=  '/ws/';

    ws = new WebSocket(uri)

    ws.onopen = function() {
      console.log('Connected')
    }

    ws.onmessage = function(evt) {
        data = JSON.parse(evt.data)
        if (data.trigger_notification) {
            const notification = new Notification(`New Sms Recived From ${data?.query?.phones?.join(', ')}`, {
                body: data?.query?.message,
            })
            notification.addEventListener('click', (ev) => {
                console.log(ev)
                window.parent.parent.focus();
                notification.close();
                window.parent.parent.location.reload();
            })
        }
    }
}

templ RootLayout() {
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Sms Trap</title>
			<link rel="stylesheet" href="/css/tippy.css"/>
			<link rel="stylesheet" href="/css/app.css"/>
			<link rel="stylesheet" href="/js/highlight/styles/nord.min.css"/>
			<script src="/js/apexcharts.min.js"></script>
			<script src="/js/dayjs.min.js"></script>
			<script src="/js/axios.min.js"></script>
			<script src="/js/highlight/highlight.min.js"></script>
			<script src="/js/highlight/languages/go.min.js"></script>
			<script src="/js/highlight/languages/javascript.min.js"></script>
			<script src="/js/highlight/languages/php.min.js"></script>
			<script src="/js/highlight/languages/python.min.js"></script>
			<script src="/js/highlight/languages/ruby.min.js"></script>
			<script src="/js/highlight/languages/bash.min.js"></script>
			<script src="/js/relativeTime.js"></script>
			<script src="/js/utils.js"></script>
			<script>dayjs.extend(window.dayjs_plugin_relativeTime)</script>
			<script defer src="/js/alpine-tooltip.min.js"></script>
			<script defer src="/js/alpinejs.min.js"></script>
			<script>hljs.highlightAll();</script>
			<style>
                body {
                    font-family: 'Exo 2', sans-serif;
                }

                [x-cloak] {
                    display: none;
                }
            </style>
			@ReadyNotification()
			@ReadyWebSocket()
			@RegisterAlpineStore()
			@core.Toaster()
		</head>
		<body class="exo-2-regular">
			{ children... }
		</body>
	</html>
}
